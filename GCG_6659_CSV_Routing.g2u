Program.Sub.Preflight.Start
V.Global.bConOpen.Declare(Boolean, False)
V.Global.sRemoteHost.Declare
V.Global.sRemoteUser.Declare
V.Global.sRemotePass.Declare
V.Global.sRemotePort.Declare
V.Global.sRemotePath.Declare
V.Global.sNewPath6659.Declare
V.Global.sNewPath6683.Declare
V.Global.sNewPath6680.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Brandon Medina 
'Customer: Real Performance Machinery 
'Quote: 13413
'Desc: CSVs originate from paycom's SFTP server and are routed to projects' local folders. Projects 6659(this one), 6680 (Employee Expenses), and 6683 use this, and are sorted according to the naming conventions on the file names.
'SFTP Credentials are maintained in GCG_6659_SFTP_Cred_Maint
F.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(createDirectories)
	F.Intrinsic.Control.CallSub(get_SFTP_settings)
'	Function.Intrinsic.Debug.InvokeDebugger
'	Function.Intrinsic.Debug.Stop
	
	F.Intrinsic.Control.CallSub(routeFiles)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.createDirectories.Start
'Check that all 3 local folders exists, and if not create them. Have 4 copies, 2 for canadian live and test, another 2 for american branch, live and test. 
F.Intrinsic.Control.Try
	V.Local.bExists.Declare
	V.Local.sCompanyCodes.Declare
	V.Local.i.Declare
	V.Local.sNewFilePath.Declare
	
	F.Intrinsic.String.Split("RPM*!*RPC*!*TST*!*CAN", "*!*", V.Local.sCompanyCodes)
	
	F.Intrinsic.Control.For(V.Local.i, 0, V.Local.sCompanyCodes.UBound, 1)
		F.Intrinsic.String.Build("{0}\CUSTOM\6659\{1}\NEW\", V.Caller.GlobalDir, V.Local.sCompanyCodes(V.Local.i), V.Local.sNewFilePath)
		F.Intrinsic.Variable.AddToArray(V.Global.sNewPath6659, V.Local.sNewFilePath)
		F.Intrinsic.File.DirExists(V.Local.sNewFilePath, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists.Not)
			F.Intrinsic.File.CreateDir(V.Local.sNewFilePath)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("{0}\CUSTOM\6680\{1}\NEW\", V.Caller.GlobalDir, V.Local.sCompanyCodes(V.Local.i), V.Local.sNewFilePath)
		F.Intrinsic.Variable.AddToArray(V.Global.sNewPath6680, V.Local.sNewFilePath)
		F.Intrinsic.File.DirExists(V.Local.sNewFilePath, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists.Not)
			F.Intrinsic.File.CreateDir(V.Local.sNewFilePath)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Build("{0}\CUSTOM\GCG_6683\{1}\", V.Caller.GlobalDir, V.Local.sCompanyCodes(V.Local.i), V.Local.sNewFilePath)
		F.Intrinsic.Variable.AddToArray(V.Global.sNewPath6683, V.Local.sNewFilePath)
		F.Intrinsic.File.DirExists(V.Local.sNewFilePath, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists.Not)
			F.Intrinsic.File.CreateDir(V.Local.sNewFilePath)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	'Remove empty elements
	F.Intrinsic.Variable.RemoveArrayElementByValue(V.Global.sNewPath6659, "", V.Global.sNewPath6659)
	F.Intrinsic.Variable.RemoveArrayElementByValue(V.Global.sNewPath6680, "", V.Global.sNewPath6680)
	F.Intrinsic.Variable.RemoveArrayElementByValue(V.Global.sNewPath6683, "", V.Global.sNewPath6683)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.createDirectories.End

Program.Sub.routeFiles.Start
V.Local.sFileList.Declare
	V.Local.i.Declare
	V.Local.j.Declare(Long)
	V.Local.sExtension.Declare
	V.Local.sFile.Declare
	V.Local.sMask.Declare(String, ".csv")
	V.Local.sLocalFileToOverWrite.Declare
	V.Local.sNewFileName.Declare(String, "newfile.csv")
	
	'you have to create this sub in your script.
F.Intrinsic.Control.AddEventHandler("SFTPDirList","Listdir")


'Get all files from sftp server that pertain to employee reports, employee expenses, or , and download them to the local NEW directory
F.Intrinsic.Control.Try
	f.Communication.SFTP.SetProperty("SSHAcceptServerAuthentication","true")
	f.Communication.SFTP.SetProperty("remoteHost", v.Global.sRemoteHost.Trim)
	f.Communication.SFTP.SetProperty("User", v.Global.sRemoteUser.Trim)
	f.Communication.SFTP.SetProperty("Password", v.Global.sRemotePass.Trim)
	f.Communication.SFTP.SetProperty("remotePort", v.Global.sRemotePort)
	f.Communication.SFTP.Logon
	
	f.Communication.SFTP.SetProperty("RemotePath", v.Global.sRemotePath)
	
	'This fires for every file in the remotepath on sftp server. 
	F.Communication.SFTP.ListDirectory
	
	F.Communication.SFTP.Logoff
	
F.Intrinsic.Control.Catch
		F.Communication.SFTP.Logoff
		F.Intrinsic.UI.Msgbox("Connection Failed")
		F.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
		F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.routeFiles.End

Program.Sub.Listdir.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String,"")
v.Local.sTemp.Declare(String,"")
V.Local.sFile.Declare(String,"")
V.Local.dFileDate.Declare(Date)
V.Local.dPrior.Declare(Date)
V.Local.bIs6659File.Declare
V.Local.bIs6680File.Declare
V.Local.bIs6683File.Declare
V.Local.bIsCanadian.Declare
V.Local.bIsAmerican.Declare
V.Local.i.Declare

V.Local.sFile.Set(v.Args.Filename.UCase)
V.Local.dFileDate.Set(V.Args.FileTime)

'Global Variables containing new paths have 4 indices, 0: RPM, 1: RPC, 2: TST, 3: CAN

	F.Intrinsic.Control.If(V.Local.sFile.Right3,=,"CSV")
		'F.Intrinsic.String.IsInString(V.Local.sFile, "GSS Employee Report", True, V.Local.bIs6659File)
		F.Intrinsic.String.IsInString(V.Local.sFile, "EMPLOYEE REPORT", True, V.Local.bIs6659File)
		'F.Intrinsic.String.IsInString(V.Local.sFile, "GSS Expense Report", True, V.Local.bIs6680File)
		F.Intrinsic.String.IsInString(V.Local.sFile, "Expense_Report", True, V.Local.bIs6680File)
		F.Intrinsic.String.IsInString(V.Local.sFile, "GSS Service Hours w Clock seq", True, V.Local.bIs6683File)
		
		F.Intrinsic.String.IsInString(V.Local.sFile, "GSSULC", True, V.Local.bIsCanadian)
		F.Intrinsic.String.IsInString(V.Local.sFile, "GSSLLC", True, V.Local.bIsAmerican)
		
		f.Communication.SFTP.SetProperty("RemoteFile",v.Args.filename)
		f.Communication.SFTP.SetProperty("Overwrite", true)
		
		F.Intrinsic.Control.If(V.Local.bIs6659File)
			F.Intrinsic.Control.If(V.Local.bIsCanadian)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6659(1),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.ElseIf(V.Local.bIsAmerican)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6659(0),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.EndIf
		
'			f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6659,v.Args.Filename,v.Local.sTemp)
'			f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
'			f.Communication.SFTP.Download
'			F.Communication.SFTP.DeleteFile(V.Args.filename)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.bIs6680File)
			F.Intrinsic.Control.If(V.Local.bIsCanadian)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6680(1),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.ElseIf(V.Local.bIsAmerican)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6680(0),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.EndIf
'			f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6680,v.Args.Filename,v.Local.sTemp)
'			f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
'			f.Communication.SFTP.Download
'			F.Communication.SFTP.DeleteFile(V.Args.filename)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.bIs6683File)
			F.Intrinsic.Control.If(V.Local.bIsCanadian)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6683(1),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.ElseIf(V.Local.bIsAmerican)
				f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6683(0),v.Args.Filename,v.Local.sTemp)
				f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
				f.Communication.SFTP.Download
				F.Communication.SFTP.DeleteFile(V.Args.filename)
			F.Intrinsic.Control.EndIf
'			f.Intrinsic.String.Build("{0}{1}",V.Global.sNewPath6683,v.Args.Filename,v.Local.sTemp)
'			f.Communication.SFTP.SetProperty("LocalFile",v.Local.sTemp)
'			f.Communication.SFTP.Download
'			F.Communication.SFTP.DeleteFile(V.Args.filename)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.Listdir.End

Program.Sub.get_SFTP_settings.Start
F.Intrinsic.Control.Try
	V.Local.bTableExist.Declare
	V.Local.sTemp.Declare
	V.Local.baValue.Declare(ByteArray)

	'Verify Custom table w SFTP settings exists, and that it has credentials in it 
	F.ODBC.Connection!con.OpenCommonConnection
	V.Global.bConOpen.Set(True)
	F.ODBC.Connection!con.TableExists("GCG_6659_SETTINGS", V.Local.bTableExist)
	F.Intrinsic.Control.If(V.Local.bTableExist)
		F.Data.DataTable.CreateFromSQL("dtSFTPSettings", "con", "select * from GCG_6659_SETTINGS")
		F.Intrinsic.Control.If(V.DataTable.dtSFTPSettings.RowCount, =, 0)
			F.Intrinsic.UI.Msgbox("No SFTP credential settings found. Please configure by logging in as SUPERVSR user and navigating to System Support > Administration > 6659 SFTP Credentials Maintenance.", "Warning")
			F.Intrinsic.Control.End
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Table GCG_6659_SETTINGS does not exist. Configure SFTP settings by logging in as SUPERVSR user and navigating to System Support > Administration > 6659 SFTP Credentials Maintenance.", "Warning")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
	
	'Grab credentials and set to global variables 
	V.Local.sTemp.Set(V.DataTable.dtSFTPSettings(0).REMOTEHOST!FieldValTrim)
	F.Intrinsic.String.ConvertString2BA(V.Local.sTemp, V.Local.baValue)
	F.Global.Encryption.Decrypt(V.Local.baValue,v.Local.sTemp)
	V.Global.sRemoteHost.Set(V.Local.sTemp.Trim)
	
	V.Local.sTemp.Set(V.DataTable.dtSFTPSettings(0).REMOTEUSER!FieldValTrim)
	F.Intrinsic.String.ConvertString2BA(V.Local.sTemp, V.Local.baValue)
	F.Global.Encryption.Decrypt(V.Local.baValue,v.Local.sTemp)
	V.Global.sRemoteUser.Set(V.Local.sTemp.Trim)
	
	V.Local.sTemp.Set(V.DataTable.dtSFTPSettings(0).REMOTEPASSWORD!FieldValTrim)
	F.Intrinsic.String.ConvertString2BA(V.Local.sTemp, V.Local.baValue)
	F.Global.Encryption.Decrypt(V.Local.baValue,v.Local.sTemp)
	V.Global.sRemotePass.Set(V.Local.sTemp.Trim)
	
	V.Local.sTemp.Set(V.DataTable.dtSFTPSettings(0).REMOTEPORT!FieldValTrim)
	F.Intrinsic.String.ConvertString2BA(V.Local.sTemp, V.Local.baValue)
	F.Global.Encryption.Decrypt(V.Local.baValue,v.Local.sTemp)
	V.Global.sRemotePort.Set(V.Local.sTemp.Trim)
	
	V.Local.sTemp.Set(v.DataTable.dtSFTPSettings(0).REMOTEPATH!FieldValTrim)
	F.Intrinsic.String.ConvertString2BA(V.Local.sTemp, V.Local.baValue)
	F.Global.Encryption.Decrypt(V.Local.baValue,v.Local.sTemp)
	V.Global.sRemotePath.Set(V.Local.sTemp.Trim)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
F.Intrinsic.Control.EndTry
Program.Sub.get_SFTP_settings.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

F.Intrinsic.Control.If(V.Global.bConOpen)
	F.ODBC.Connection!con.Close
F.Intrinsic.Control.EndIf

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_6659_CSV_Routing.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.Comments.Start
${$5$}$20.1.8474.24170$}$1
${$6$}$bmedina$}$20230524103318356$}$kOipCrsyLBVj2KoSwkcdK23ChxGVcBlE6wTFFgFeqEHNf0gIJfNoUWLRtSXTCOKfdFH8OV6SneQ=
Program.Sub.Comments.End